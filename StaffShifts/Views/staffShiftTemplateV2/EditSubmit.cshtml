@model StaffShifts.Models.t_PTLStaff_Details

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Recid)
        @Html.HiddenFor(model => model.StatusCode)
        @Html.HiddenFor(model => model.SiteCode)
        @Html.HiddenFor(model => model.PTLUserName)
        @Html.HiddenFor(model => model.PTLSAPName)
        @Html.HiddenFor(model => model.PTLUserID)
        @Html.HiddenFor(model => model.SchedShiftDuration)
        @Html.HiddenFor(model => model.ScheduledBreaks)
        @Html.HiddenFor(model => model.LastChangedBy)
        @Html.HiddenFor(model => model.LastChangedDate)
        @Html.HiddenFor(model => model.Confirmed)


        <div class="form-group">
            @Html.LabelFor(model => model.PTLUserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PTLUserName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PTLSAPName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PTLSAPName, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PTLUserID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.PTLUserID, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SchedShiftDuration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.SchedShiftDuration, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RevisedShiftDuration, "RevisedShiftDuration", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RevisedShiftDuration", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RevisedShiftDuration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ScheduledBreaks, "ScheduledBreaks", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ScheduledBreaks, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RevisedBreaks, "RevisedBreaks", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RevisedBreaks", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RevisedBreaks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReasonForChangeInShiftLength, "ReasonForChangeInShiftLength", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ReasonForChangeInShiftLength", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ReasonForChangeInShiftLength, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DisiplinaryStage, "DisiplinaryStage", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DisiplinaryStage", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DisiplinaryStage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, "Comments", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "IndexSubmit",null, new { @class = "btn btn-success" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
